{"version":3,"sources":["./src/app/pages/connection-page/connection-page-routing.module.ts","./src/app/pages/connection-page/connection-page.module.ts","./src/app/pages/connection-page/connection-page.page.ts","./src/app/pages/connection-page/connection-page.page.scss","./src/app/pages/connection-page/connection-page.page.html"],"names":[],"mappings":"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","file":"src_app_pages_connection-page_connection-page_module_ts.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nimport { ConnectionPagePage } from './connection-page.page';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ConnectionPagePage\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule],\r\n})\r\nexport class ConnectionPagePageRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\r\n\r\nimport { IonicModule } from '@ionic/angular';\r\n\r\nimport { ConnectionPagePageRoutingModule } from './connection-page-routing.module';\r\n\r\nimport { ConnectionPagePage } from './connection-page.page';\r\n\r\n@NgModule({\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    IonicModule,\r\n    ConnectionPagePageRoutingModule,\r\n    ReactiveFormsModule\r\n  ],\r\n  declarations: [ConnectionPagePage]\r\n})\r\nexport class ConnectionPagePageModule {}\r\n","import {Component, OnDestroy, OnInit} from '@angular/core';\r\nimport {Router} from \"@angular/router\";\r\nimport {of, Subscription} from \"rxjs\";\r\nimport {CommonStateService} from \"../../services/common-state.service\";\r\nimport {ToastController} from \"@ionic/angular\";\r\nimport {FormControl, FormGroup} from \"@angular/forms\";\r\nimport {catchError, debounceTime, take} from \"rxjs/operators\";\r\nimport {HttpClient} from \"@angular/common/http\";\r\n\r\n@Component({\r\n  selector: 'app-connection-page',\r\n  templateUrl: './connection-page.page.html',\r\n  styleUrls: ['./connection-page.page.scss'],\r\n})\r\nexport class ConnectionPagePage implements OnInit, OnDestroy {\r\n  private subscriptions: Subscription[] = [];\r\n\r\n  /** @internal */\r\n  showMobileMenu = true;\r\n\r\n  /** @internal */\r\n  connectionForm = new FormGroup({\r\n    serverIpAddr: new FormControl(''),\r\n    serverPort: new FormControl(''),\r\n  })\r\n\r\n  /** @internal */\r\n  isConnected = false;\r\n\r\n  /** @internal */\r\n  testSuccessful = null;\r\n\r\n  /** @internal */\r\n  disableButtons = false;\r\n\r\n  /** @internal */\r\n  isLoading = false;\r\n\r\n  constructor(\r\n    public router: Router,\r\n    public state: CommonStateService,\r\n    private toastController: ToastController,\r\n    private http: HttpClient,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscriptions.push(\r\n      this.state.getSplitPaneVisible().subscribe(\r\n        (isVisible) => this.showMobileMenu = !isVisible)\r\n    )\r\n\r\n    this.state.getServerConfigObservable().pipe(take(1)).subscribe(serverUrl => {\r\n      this.triggerConnectionTest(serverUrl.ip, serverUrl.port);\r\n      this.connectionForm.patchValue({'serverIpAddr': serverUrl.ip,'serverPort': serverUrl.port}, {emitEvent: false})\r\n    });\r\n\r\n    this.subscriptions.push(\r\n      this.connectionForm.valueChanges\r\n        .pipe(debounceTime(1000))\r\n        .subscribe((rawVal) => {\r\n          this.triggerConnectionTest(rawVal.serverIpAddr, rawVal.serverPort);\r\n        })\r\n    )\r\n  };\r\n\r\n  ngOnDestroy(): void {\r\n    this.subscriptions.forEach((s) => s.unsubscribe());\r\n  }\r\n\r\n\r\n\r\n  triggerConnectionTest(ip: string, port: number) {\r\n    this.http.get(this.getServerString(ip,port)+'/ping').pipe(\r\n      catchError((error) => {\r\n        return of(false);\r\n      })\r\n    ).subscribe( res => {\r\n      if(res) {\r\n        this.testSuccessful = true;\r\n        this.state.setServerConfig(\r\n          {ip, port}\r\n        );\r\n      } else {\r\n        this.testSuccessful = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  private getServerString(serverIpAddr: string, serverPort: number) {\r\n    return `http://${serverIpAddr}:${serverPort}`;\r\n  }\r\n}\r\n","export default \".content-wrapper {\\n  display: flex;\\n  flex-direction: column;\\n  height: 100%;\\n}\\n\\n.connection-page-form {\\n  margin-top: 1rem;\\n}\\n\\n.connect-wrapper {\\n  margin: 0.5rem;\\n  display: flex;\\n  flex-direction: column;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbm5lY3Rpb24tcGFnZS5wYWdlLnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxZQUFBO0FBQ0Y7O0FBRUE7RUFDRSxnQkFBQTtBQUNGOztBQUVBO0VBQ0UsY0FBQTtFQUNBLGFBQUE7RUFDQSxzQkFBQTtBQUNGIiwiZmlsZSI6ImNvbm5lY3Rpb24tcGFnZS5wYWdlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGVudC13cmFwcGVye1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5jb25uZWN0aW9uLXBhZ2UtZm9ybXtcclxuICBtYXJnaW4tdG9wOiAxcmVtO1xyXG59XHJcblxyXG4uY29ubmVjdC13cmFwcGVye1xyXG4gIG1hcmdpbjogLjVyZW07XHJcbiAgZGlzcGxheTogZmxleDtcclxuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xyXG59XHJcbiJdfQ== */\";","export default \"<ion-header>\\r\\n  <ion-toolbar>\\r\\n    <ion-buttons\\r\\n      *ngIf=\\\"this.showMobileMenu\\\"\\r\\n      slot=\\\"start\\\" class=\\\"back-button\\\" (click)=\\\"this.router.navigate(['/tabs/settings'])\\\">\\r\\n      <ion-icon slot=\\\"icon-only\\\" name=\\\"arrow-back-outline\\\"></ion-icon>\\r\\n    </ion-buttons>\\r\\n    <ion-title>Verbindungseinstellungen</ion-title>\\r\\n  </ion-toolbar>\\r\\n</ion-header>\\r\\n\\r\\n<div class=\\\"content-wrapper\\\">\\r\\n  <form class=\\\"connection-page-form\\\" [formGroup]=\\\"connectionForm\\\">\\r\\n    <ion-item>\\r\\n      <ion-label>Server IP-Adresse: </ion-label>\\r\\n      <ion-input formControlName=\\\"serverIpAddr\\\" placeholder=\\\"xxx.xxx.xxx.xxx\\\"></ion-input>\\r\\n    </ion-item>\\r\\n    <ion-item type=\\\"number\\\">\\r\\n      <ion-label>Server Port: </ion-label>\\r\\n      <ion-input formControlName=\\\"serverPort\\\" placeholder=\\\"1234\\\"></ion-input>\\r\\n    </ion-item>\\r\\n  </form>\\r\\n  <div class=\\\"connect-wrapper\\\">\\r\\n    <ion-item button [disabled]=\\\"disableButtons ||this.testSuccessful == null\\\" (click)=\\\"this.triggerConnectionTest(this.connectionForm.get('serverIpAddr').value,this.connectionForm.get('serverPort').value)\\\">\\r\\n      <ion-label>\\r\\n        {{ this.testSuccessful == null ? 'teste verbindung...' : this.testSuccessful ? 'Server verbunden' : 'Keine Verbindung zum Server'}}\\r\\n      </ion-label>\\r\\n      <ion-icon [color]=\\\"this.testSuccessful === null ? 'medium' : this.testSuccessful ? 'primary' : 'danger'\\\" slot=\\\"end\\\"\\r\\n                [name]=\\\"this.testSuccessful === null ? 'wifi-outline' : this.testSuccessful ? 'checkmark-outline' : 'refresh-outline'\\\"></ion-icon>\\r\\n    </ion-item>\\r\\n  </div>\\r\\n  <ion-item *ngIf=\\\"!showMobileMenu\\\">\\r\\n    <ion-button (click)=\\\"this.router.navigate(['/'])\\\">Zurück</ion-button>\\r\\n  </ion-item>\\r\\n</div>\\r\\n\\r\\n\";"],"sourceRoot":"webpack:///"}